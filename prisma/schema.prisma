// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String         @id @default(uuid())
  fullName     String         @db.VarChar(255)
  email        String         @unique @db.VarChar(255)
  phoneNumber  String         @db.VarChar(255)
  password     String         @db.VarChar(255)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Organization Organization[]
}

model Organization {
  id                 String    @id @default(uuid())
  userId             String    @db.VarChar(255)
  user               Users     @relation(fields: [userId], references: [id])
  organizationName   String?   @db.VarChar(255)
  organizationEmail  String?   @unique @db.VarChar(255)
  organizattionPhone String?   @db.VarChar(255)
  organizationLogo   String?   @db.VarChar(255)
  industry           String?   @db.VarChar(255)
  location           String?   @db.VarChar(255)
  country            String?   @db.VarChar(255)
  state              String?   @db.VarChar(255)
  city               String?   @db.VarChar(255)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  Members            Members[]
}

enum MEMBER_ROLE {
  ADMIN
  USER
}

model Members {
  id             String       @id @default(uuid())
  userId         String       @db.VarChar(255)
  userRole       MEMBER_ROLE  @default(USER)
  organizationId String       @db.VarChar(255)
  organization   Organization @relation(fields: [organizationId], references: [id])
}

model Files {
  id String @id @default(uuid())
}

model FilePermissions {
  id String @id @default(uuid())
}
